이진 탐색 트리 & 힙
⦁    직접 구현할 일은 X (C형 가야있다)
⦁    이진 탐색 트리: python 은 라이브러리 없음
⦁        코테 비중도 많이 낮음
⦁    제일 처음 삽입: 루트
⦁        작으면 왼쪽
⦁        크면 오른쪽
⦁    편향 가능성: 존재 
⦁        --> 메모리가 비효율적일 수 있다.


⦁    결론: 데이터 추가/삭제가 빈번하게 일어나는 와중에
⦁        정렬된 데이터가 필요하다  -->  BST 활용
⦁    시간 복잡도 - 평균 O(logN) / 최악 O(N) - 편향된 경우


⦁    heap
⦁    힙 - 라이브러리 있다
⦁        코테 비중 높다
⦁    제일 처음 삽입: 루트
⦁       MAX Heap: 부모가 무조건 자식보다 커야해
⦁        MIN Heap: 부모가 무조건 자식보다 작아야 해
⦁       편향 가능성: 없음
⦁    가장 앞에 있는 데이터만 활용 (Priority Queue)
⦁    시간 복잡도 - O(logN)